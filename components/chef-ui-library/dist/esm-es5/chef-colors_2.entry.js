import { r as registerInstance, h } from './chunk-efdec40a.js';
/**
 * @description
 * Chef colors
 */
var ChefColors = /** @class */ (function () {
    function ChefColors(hostRef) {
        registerInstance(this, hostRef);
    }
    ChefColors.prototype.render = function () {
        return (h("div", null, h("h2", null, "Color Guidelines"), h("p", null, "The Automate UI is built from a core set of primary, secondary, and greyscale colors. Secondary colors and additional shades are used to convey status and are used in backgrounds."), h("h3", null, "Color Palettes"), h("div", { class: "chef-flex-wrapper" }, h("h4", null, "Primary"), h("p", null, "Used for brand accents and actionable elements such as links and buttons."), h("div", { class: "chef-flex-row" }, h("div", { class: "chef-col-3 chef-card-item" }, h("div", { class: "chef-color-swatch chef-primary" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Primary")), h("h6", null, "--chef-primary"), h("ul", null, h("li", null, "HSL 23 100% 50%"), h("li", null, "RGB 254, 97, 0"), h("li", null, "HEX #FE6100")))), h("div", { class: "chef-col-3 chef-card-item" }, h("div", { class: "chef-color-swatch chef-primary-dark" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Primary Dark")), h("h6", null, "--chef-primary-dark"), h("ul", null, h("li", null, "HSL 234, 22%, 17%"), h("li", null, "RGB 34, 36, 53"), h("li", null, "HEX #222435")))), h("div", { class: "chef-col-3 chef-card-item" }, h("div", { class: "chef-color-swatch chef-primary-bright" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Primary Bright")), h("h6", null, "--chef-primary-bright"), h("ul", null, h("li", null, "HSL 226, 88%, 58%"), h("li", null, "RGB 56, 100, 242"), h("li", null, "HEX #3864F2")))), h("div", { class: "chef-col-3 chef-card-item" }, h("div", { class: "chef-color-swatch chef-primary-light" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Primary Light")), h("h6", null, "--chef-primary-light"), h("ul", null, h("li", null, "HSL 223, 100%, 70%"), h("li", null, "RGB 100, 143, 255"), h("li", null, "HEX #648FFF"))))), h("h4", null, "Secondary"), h("p", null, "Used to communicate status resulting from Chef client runs and compliance scans."), h("div", { class: "chef-flex-row" }, h("div", { class: "chef-col-3 chef-card-item" }, h("div", { class: "chef-color-swatch chef-critical" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Critical")), h("h6", null, "--chef-critical"), h("ul", null, h("li", null, "HSL 331, 72%, 51%"), h("li", null, "RGB 220, 38, 127"), h("li", null, "HEX #DC267F")))), h("div", { class: "chef-col-3 chef-card-item" }, h("div", { class: "chef-color-swatch chef-major" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Major")), h("h6", null, "--chef-major"), h("ul", null, h("li", null, "HSL 293, 67%, 51%"), h("li", null, "RGB 194, 45, 213"), h("li", null, "HEX #C22DD5")))), h("div", { class: "chef-col-3 chef-card-item" }, h("div", { class: "chef-color-swatch chef-minor" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Minor")), h("h6", null, "--chef-minor"), h("ul", null, h("li", null, "HSL 251, 83%, 65%"), h("li", null, "RGB 120, 94, 240"), h("li", null, "HEX #785EF0")))), h("div", { class: "chef-col-3 chef-card-item" }, h("div", { class: "chef-color-swatch chef-success" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Success")), h("h6", null, "--chef-success"), h("ul", null, h("li", null, "HSL 208, 100%, 43%"), h("li", null, "RGB 0, 117, 219"), h("li", null, "HEX #0075DB"))))), h("h4", null, "Greyscale"), h("p", null, "Used for background color fills and disabled states."), h("div", { class: "chef-flex-row" }, h("div", { class: "chef-col-2 chef-card-item" }, h("div", { class: "chef-color-swatch chef-dark-grey" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Dark Grey")), h("h6", null, "--chef-dark-grey"), h("ul", null, h("li", null, "HSL 180, 4%, 45%"), h("li", null, "RGB 111, 120, 120"), h("li", null, "HEX #6F7878")))), h("div", { class: "chef-col-2 chef-card-item" }, h("div", { class: "chef-color-swatch chef-grey" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Grey")), h("h6", null, "--chef-grey"), h("ul", null, h("li", null, "HSL 200, 10%, 89%"), h("li", null, "RGB 223, 227, 229"), h("li", null, "HEX #DFE3E5")))), h("div", { class: "chef-col-2 chef-card-item" }, h("div", { class: "chef-color-swatch chef-light-grey" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Light Grey")), h("h6", null, "--chef-light-grey"), h("ul", null, h("li", null, "HSL 203, 19%, 92%"), h("li", null, "RGB 230, 235, 238"), h("li", null, "HEX #E6EBEE")))), h("div", { class: "chef-col-2 chef-card-item" }, h("div", { class: "chef-color-swatch chef-lightest-grey" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Lightest Grey")), h("h6", null, "--chef-lightest-grey"), h("ul", null, h("li", null, "HSL 204, 26%, 96%"), h("li", null, "RGB 243, 246, 248"), h("li", null, "HEX #F3F6F8")))), h("div", { class: "chef-col-2 chef-card-item" }, h("div", { class: "chef-color-swatch chef-white" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef White")), h("h6", null, "--chef-white"), h("ul", null, h("li", null, "HSL 0, 0%, 100%"), h("li", null, "RGB 255, 255, 255"), h("li", null, "HEX #FFFFFF")))), h("div", { class: "chef-col-2 chef-card-item" }, h("div", { class: "chef-color-swatch chef-black" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Black")), h("h6", null, "--chef-black"), h("ul", null, h("li", null, "HSL 0, 0%, 0%"), h("li", null, "RGB 0, 0, 0"), h("li", null, "HEX #000000"))))), h("h3", null, "Accessible Color Contrast"), h("h4", null, "What colors can I use for text?"), h("p", null, "As a general rule of thumb, all font colors, when compared to their background colors, should meet WCAG 2.0 AA contrast guidelines."), h("div", { class: "chef-flex-row justify-left" }, h("div", { class: "chef-col-2 chef-card-item" }, h("div", { class: "chef-color-swatch chef-primary-dark" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Primary Dark")), h("h6", null, "--chef-primary-dark"))), h("div", { class: "chef-col-2 chef-card-item" }, h("div", { class: "chef-color-swatch chef-dark-grey" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Dark Grey")), h("h6", null, "--chef-dark-grey"))), h("div", { class: "chef-col-2 chef-card-item" }, h("div", { class: "chef-color-swatch chef-primary-bright" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef Primary Bright")), h("h6", null, "--chef-primary-bright"))), h("div", { class: "chef-col-2 chef-card-item" }, h("div", { class: "chef-color-swatch chef-white" }), h("div", { class: "chef-card-info" }, h("h4", null, h("strong", null, "Chef White")), h("h6", null, "--chef-white")))), h("h4", null, "Compliant Color Combinations"), h("p", null, "Color contrast is checked when each atom is designed. If you are working on something where there is no design to follow, please adhere to these combinations to ensure proper WCAG 2.0 AA color contrast."), h("div", { class: "chef-flex-row" }, h("div", { class: "chef-col-3 chef-card-item chef-text-base chef-white" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef Primary Dark", h("br", null), "on Chef White"))), h("div", { class: "chef-col-3 chef-card-item chef-text-base chef-lightest-grey" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef Primary Dark", h("br", null), "on Chef Lightest Grey"))), h("div", { class: "chef-col-3 chef-card-item chef-text-base chef-light-grey" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef Primary Dark", h("br", null), "on Chef Light Grey"))), h("div", { class: "chef-col-3 chef-card-item chef-text-base chef-grey" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef Primary Dark", h("br", null), "on Chef Grey")))), h("div", { class: "chef-flex-row justify-left" }, h("div", { class: "chef-col-3 chef-card-item chef-text-dull chef-white" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef Dark Grey", h("br", null), "on Chef White")))), h("div", { class: "chef-flex-row justify-left" }, h("div", { class: "chef-col-3 chef-card-item chef-text-active chef-white" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef Primary Bright", h("br", null), "on Chef White"))), h("div", { class: "chef-col-3 chef-card-item chef-text-active chef-lightest-grey" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef Primary Bright", h("br", null), "on Chef Lightest Grey")))), h("div", { class: "chef-flex-row justify-left" }, h("div", { class: "chef-col-3 chef-card-item chef-text-contrast chef-primary-bright" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef White", h("br", null), "on Chef Primary Bright"))), h("div", { class: "chef-col-3 chef-card-item chef-text-contrast chef-dark-grey" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef White", h("br", null), "on Chef Dark Grey"))), h("div", { class: "chef-col-3 chef-card-item chef-text-contrast chef-primary-dark" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef White", h("br", null), "on Chef Primary Dark")))), h("div", { class: "chef-flex-row justify-left" }, h("div", { class: "chef-col-3 chef-card-item chef-text-contrast chef-critical" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef White", h("br", null), "on Chef Critical"))), h("div", { class: "chef-col-3 chef-card-item chef-text-contrast chef-major" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef White", h("br", null), "on Chef Major"))), h("div", { class: "chef-col-3 chef-card-item chef-text-contrast chef-minor" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef White", h("br", null), "on Chef Minor"))), h("div", { class: "chef-col-3 chef-card-item chef-text-contrast chef-success" }, h("div", { class: "chef-card-info" }, h("span", null, "Chef White", h("br", null), "on Chef Success")))))));
    };
    Object.defineProperty(ChefColors, "style", {
        get: function () { return "chef-colors{display:block;padding:1rem}chef-colors h3,chef-colors h4,chef-colors p{display:block;max-width:40rem;width:100%}chef-colors .chef-card-item{margin-bottom:2rem;background-color:var(--chef-white);border-radius:var(--chef-border-radius);-webkit-box-shadow:var(--chef-box-shadow);box-shadow:var(--chef-box-shadow)}chef-colors .chef-color-swatch{display:block;height:2rem;width:100%;border-radius:var(--chef-border-radius) var(--chef-border-radius) 0 0}chef-colors .chef-card-info{padding:1rem}chef-colors .chef-card-info ul{margin:1rem 0 0;padding:0;list-style:none}chef-colors .chef-card-info li{font-size:.75rem;color:var(--chef-dark-grey)}chef-colors .chef-card-info span{font-size:.875rem}chef-colors .chef-primary{background-color:var(--chef-primary)}chef-colors .chef-primary-dark{background-color:var(--chef-primary-dark)}chef-colors .chef-primary-bright{background-color:var(--chef-primary-bright)}chef-colors .chef-primary-light{background-color:var(--chef-primary-light)}chef-colors .chef-critical{background-color:var(--chef-critical)}chef-colors .chef-major{background-color:var(--chef-major)}chef-colors .chef-minor{background-color:var(--chef-minor)}chef-colors .chef-success{background-color:var(--chef-success)}chef-colors .chef-dark-grey{background-color:var(--chef-dark-grey)}chef-colors .chef-grey{background-color:var(--chef-grey)}chef-colors .chef-light-grey{background-color:var(--chef-light-grey)}chef-colors .chef-lightest-grey{background-color:var(--chef-lightest-grey)}chef-colors .chef-white{background-color:var(--chef-white)}chef-colors .chef-black{background-color:var(--chef-black)}chef-colors .chef-text-base{color:var(--chef-primary-dark)}chef-colors .chef-text-dull{color:var(--chef-dark-grey)}chef-colors .chef-text-active{color:var(--chef-primary-bright)}chef-colors .chef-text-contrast{color:var(--chef-white)}"; },
        enumerable: true,
        configurable: true
    });
    return ChefColors;
}());
var ChefTypography = /** @class */ (function () {
    function ChefTypography(hostRef) {
        registerInstance(this, hostRef);
    }
    ChefTypography.prototype.render = function () {
        return (h("div", null, h("h2", null, "Typography Guidelines"), h("p", null, "A typographic scale is used to achieve consistency by minimizing the number of font styles applied throughout Chef's products."), h("h3", null, "Guidelines"), h("h4", null, "Which font size should I use?"), h("p", null, "Page titles (H2) use the 24pt font size. Subtitles and any other headings below the main page title should use decreasing sizes of 18pt (H3) or 14pt (H4). The 36pt (H1) title size should only be used in areas with ample amounts of whitespace, such as empty page states."), h("p", null, "Avoid skipping intermediate font sizes whenever possible, in other words, a page should not have only 24pt and 14pt headings. In cases where lower level headings are needed (H5-H6), you can use alternate weights, colors, or all caps for the title font without going below the minimum 14pt font size."), h("p", null, "To maintain readability, paragraph text should generally not be smaller than 14pt. In cases where smaller text is necessary, such as form labels and tips, 12pt can be used. Font sizes should never be smaller than 12pt."), h("h3", null, "When should I make text bold or italic?"), h("p", null, "Aside from headings, heavier font weights should be used sparingly for greatest impact and are most effective in sections containing a lot of text elements. Similarly, italicized fonts should be employed where CHEF terminology is used or when there is a sense of urgency or warning in the message."), h("h3", null, "Type Scale"), h("div", { class: "chef-flex-wrapper" }, h("h4", null, "Headings"), h("div", { class: "chef-flex-row" }, h("div", { class: "chef-col-8 chef-card-item" }, h("div", { class: "chef-card-info" }, h("h1", null, "All your node are belong to us."), h("h4", null, "h1"))), h("div", { class: "chef-col-4 chef-card-item chef-lightest-grey" }, h("div", { class: "chef-card-info" }, h("ul", null, h("li", null, "font-size: 36px;"), h("li", null, "font-weight: 400;"), h("li", null, "line-height: 1.25em;"), h("li", null, "letter-spacing: normal;")))), h("div", { class: "chef-col-8 chef-card-item" }, h("div", { class: "chef-card-info" }, h("h2", null, "All your node are belong to us."), h("h4", null, "h2"))), h("div", { class: "chef-col-4 chef-card-item chef-lightest-grey" }, h("div", { class: "chef-card-info" }, h("ul", null, h("li", null, "font-size: 24px;"), h("li", null, "font-weight: 400;"), h("li", null, "line-height: 1.25em;"), h("li", null, "letter-spacing: normal;")))), h("div", { class: "chef-col-8 chef-card-item" }, h("div", { class: "chef-card-info" }, h("h3", null, "All your node are belong to us."), h("h4", null, "h3"))), h("div", { class: "chef-col-4 chef-card-item chef-lightest-grey" }, h("div", { class: "chef-card-info" }, h("ul", null, h("li", null, "font-size: 18px;"), h("li", null, "font-weight: 400;"), h("li", null, "line-height: 1.25em;"), h("li", null, "letter-spacing: normal;")))), h("div", { class: "chef-col-8 chef-card-item" }, h("div", { class: "chef-card-info" }, h("h4", null, "All your node are belong to us."), h("h4", null, "h4"))), h("div", { class: "chef-col-4 chef-card-item chef-lightest-grey" }, h("div", { class: "chef-card-info" }, h("ul", null, h("li", null, "font-size: 14px;"), h("li", null, "font-weight: 400;"), h("li", null, "line-height: 1.25em;"), h("li", null, "letter-spacing: normal;"))))), h("h4", null, "Body"), h("div", { class: "chef-flex-row" }, h("div", { class: "chef-col-8 chef-card-item" }, h("div", { class: "chef-card-info" }, h("p", { class: "chef-font-lg" }, "All your node are belong to us."), h("h4", null, "body (base)"))), h("div", { class: "chef-col-4 chef-card-item chef-lightest-grey" }, h("div", { class: "chef-card-info" }, h("ul", null, h("li", null, "font-size: 16px;"), h("li", null, "font-weight: 300;"), h("li", null, "line-height: 1.25em;"), h("li", null, "letter-spacing: normal;")))), h("div", { class: "chef-col-8 chef-card-item" }, h("div", { class: "chef-card-info" }, h("p", null, "All your node are belong to us."), h("h4", null, "body (default)"))), h("div", { class: "chef-col-4 chef-card-item chef-lightest-grey" }, h("div", { class: "chef-card-info" }, h("ul", null, h("li", null, "font-size: 14px;"), h("li", null, "font-weight: 300;"), h("li", null, "line-height: 1.25em;"), h("li", null, "letter-spacing: normal;")))), h("div", { class: "chef-col-8 chef-card-item" }, h("div", { class: "chef-card-info" }, h("p", { class: "chef-font-sm" }, "All your node are belong to us."), h("h4", null, "body (small)"))), h("div", { class: "chef-col-4 chef-card-item chef-lightest-grey" }, h("div", { class: "chef-card-info" }, h("ul", null, h("li", null, "font-size: 12px;"), h("li", null, "font-weight: 300;"), h("li", null, "line-height: 1.25em;"), h("li", null, "letter-spacing: normal;"))))))));
    };
    Object.defineProperty(ChefTypography, "style", {
        get: function () { return "chef-typography{display:block;padding:1rem}chef-typography h3,chef-typography h4,chef-typography p{display:block;max-width:40rem;width:100%}chef-typography .chef-card-item{margin-bottom:2rem;background-color:var(--chef-white);border-radius:var(--chef-border-radius);-webkit-box-shadow:var(--chef-box-shadow);box-shadow:var(--chef-box-shadow)}chef-typography .chef-color-swatch{display:block;height:2rem;width:100%;border-radius:var(--chef-border-radius) var(--chef-border-radius) 0 0}chef-typography .chef-card-info{padding:1rem}chef-typography .chef-card-info ul{margin:0;padding:0;list-style:none}chef-typography .chef-card-info li{font-size:.75rem;color:var(--chef-dark-grey)}chef-typography .chef-card-info span{font-size:.875rem}chef-typography .chef-font-lg{font-size:1rem}chef-typography .chef-font-sm{font-size:.75rem}chef-typography .chef-primary{background-color:var(--chef-primary)}chef-typography .chef-primary-dark{background-color:var(--chef-primary-dark)}chef-typography .chef-primary-bright{background-color:var(--chef-primary-bright)}chef-typography .chef-primary-light{background-color:var(--chef-primary-light)}chef-typography .chef-critical{background-color:var(--chef-critical)}chef-typography .chef-major{background-color:var(--chef-major)}chef-typography .chef-minor{background-color:var(--chef-minor)}chef-typography .chef-success{background-color:var(--chef-success)}chef-typography .chef-dark-grey{background-color:var(--chef-dark-grey)}chef-typography .chef-grey{background-color:var(--chef-grey)}chef-typography .chef-light-grey{background-color:var(--chef-light-grey)}chef-typography .chef-lightest-grey{background-color:var(--chef-lightest-grey)}chef-typography .chef-white{background-color:var(--chef-white)}chef-typography .chef-black{background-color:var(--chef-black)}chef-typography .chef-text-base{color:var(--chef-primary-dark)}chef-typography .chef-text-dull{color:var(--chef-dark-grey)}chef-typography .chef-text-active{color:var(--chef-primary-bright)}chef-typography .chef-text-contrast{color:var(--chef-white)}"; },
        enumerable: true,
        configurable: true
    });
    return ChefTypography;
}());
export { ChefColors as chef_colors, ChefTypography as chef_typography };
